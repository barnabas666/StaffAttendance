@model StaffAtt.Web.Models.CheckInDisplayAdminViewModel

@{
    ViewData["Title"] = "List";
}

@if (Model.StartDate > Model.EndDate)
{
    <h4 class="text-danger">The end date cannot be earlier than the start date!</h4>
}
else
{
    <h4>Check-Ins for dates in range: @Model.StartDate.ToShortDateString() - @Model.EndDate.ToShortDateString()</h4>
}

<p>
    <a asp-action="Create">Create New</a>
</p>

<div class="row">
    <div class="col-md-4">
        <form asp-action="List">            
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <!-- Selection from DropDown List populated by SelectList StaffDropDownData.
            Value is Id of Staff and we bind it to SelectedId property.-->
            <select asp-items="@Model.StaffDropDownData" asp-for="@Model.SelectedId" new { onchange="this.form.submit();" }></select>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                <input asp-for="EndDate" class="form-control" />
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CheckIns[0].FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StaffList[0].EmailAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StaffList[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckIns[0].CheckInDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CheckIns[0].CheckOutDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CheckIns)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckInDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckOutDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
