@model StaffAtt.Web.Models.StaffDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

@* Notification for success messages *@
@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success" role="alert">
        @Model.SuccessMessage
    </div>
}
@* Notification for error messages *@
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @Model.ErrorMessage
    </div>
}
@* Notification for info messages *@
@if (!string.IsNullOrEmpty(Model.Message))
{
    <div class="alert alert-warning" role="alert">
        @Model.Message
    </div>
}

@if (Model.BasicInfo.IsApproved == false)
{
    <h4 class="text-danger">You are not approved to Check-in.</h4>
}

@if (Model == null)
{
    <h4>The requested record was not found.</h4>
}
else 
{
    <div>
        <h4>Your personal information.</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BasicInfo.FirstName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BasicInfo.FirstName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BasicInfo.LastName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BasicInfo.LastName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BasicInfo.EmailAddress)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BasicInfo.EmailAddress)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BasicInfo.Alias)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BasicInfo.Alias)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BasicInfo.IsApproved)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BasicInfo.IsApproved)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BasicInfo.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BasicInfo.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.Street)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.Street)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.City)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.City)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.Zip)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.Zip)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.State)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.State)
            </dd>
            @foreach (var item in Model.PhoneNumbers)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.PhoneNumbers)
                </dt>
                <dd class="col-sm-10">
                    @item.PhoneNumber
                </dd>
            }
        </dl>
    </div>
}

@section Scripts {
    <script>
        setTimeout(() => {
            const alert = document.querySelector(".alert-success");
            if (alert) alert.style.display = "none";
        }, 5000);
    </script>
}

